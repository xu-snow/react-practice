{"version":3,"sources":["pages/CreateRefAPI/index.tsx","index.tsx","App.tsx","pages/ContextAPI/index.tsx","reactContext/index.ts","pages/ForwardRef/index.tsx","pages/NewLifecycle/index.tsx","logo.svg","registerServiceWorker.ts"],"names":["CustomTextInput","_super","props","_this","call","this","focusTextInput","textInput","current","focus","__WEBPACK_IMPORTED_MODULE_0_react__","__extends","prototype","componentDidMount","render","ref","type","style","textAlign","marginTop","onClick","children","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_2__App__","document","getElementById","Object","__WEBPACK_IMPORTED_MODULE_4__registerServiceWorker__","routes","URL_REPLACE","urlRoutes","map","route","replace","toLowerCase","App","__WEBPACK_IMPORTED_MODULE_1_react_router_dom__","className","src","__WEBPACK_IMPORTED_MODULE_7__logo_svg___default","a","alt","index","key","to","path","component","__WEBPACK_IMPORTED_MODULE_2__pages_ContextAPI__","__WEBPACK_IMPORTED_MODULE_3__pages_CreateRefAPI__","__WEBPACK_IMPORTED_MODULE_4__pages_ForwardRef__","__WEBPACK_IMPORTED_MODULE_5__pages_NewLifecycle__","__webpack_exports__","GlobalStoreContextProvider","apply","arguments","state","__assign","__WEBPACK_IMPORTED_MODULE_1__reactContext_index__","handleContextChange","action","setState","theme","color","Provider","value","dispatch","SubComponent","ContextAPI","Consumer","context","initialState","GlobalStoreContext","WrappedComponent","LogProps","WrapCustomTextInput","__WEBPACK_IMPORTED_MODULE_1__CreateRefAPI__","componentDidUpdate","prevProps","console","log","_a","forwardRef","rest","__rest","IncludeForWardRefCom","handleClick","componentRef","handleClear","THEME","initItem","Array","from","length","NewLifecycle","item","i","handleChange","Math","floor","random","handleAdd","slice","unshift","handleReduce","splice","listRef","getSnapshotBeforeUpdate","prevState","list","scrollHeight","scrollTop","snapshot","marginBottom","ChildComponent","marginLeft","id","height","overflow","border","k","currentPropValue","newTheme","oldTheme","getDerivedStateFromProps","nextProps","module","exports","__webpack_require__","p","navigator","publicUrl","URL","window","location","toString","origin","addEventListener","swUrl","isLocalhost","fetch","then","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","controller","error"],"mappings":"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","file":"static/js/app.8df7b682.js","sourcesContent":["import * as React from 'react'\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n *  使用React.createRef，引用dom元\r\n *  素或者是react实例\r\n * \r\n */\r\nexport default class CustomTextInput extends React.Component {\r\n  public textInput: React.RefObject<HTMLInputElement>\r\n\r\n  constructor(props: {}) {\r\n    super(props)\r\n    this.textInput = React.createRef()\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.focusTextInput()\r\n  }\r\n\r\n  public focusTextInput = () => {\r\n    this.textInput.current!.focus()\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          ref={this.textInput}\r\n          type=\"text\" />\r\n        <div style={{ textAlign: 'center', marginTop: 12 }}>\r\n          <button onClick={this.focusTextInput}> focus</button>\r\n          {\r\n            this.props.children\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/CreateRefAPI/index.tsx","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","import * as React from 'react';\r\nimport { HashRouter, Link, Route, Switch } from 'react-router-dom';\r\n// import asyncComponent from './async-component';\r\nimport ContextAPI from './pages/ContextAPI';\r\nimport CustomTextInput from './pages/CreateRefAPI';\r\nimport IncludeForWardRefCom from './pages/ForwardRef'\r\nimport NewLifecycle from './pages/NewLifecycle'\r\n\r\nimport './App.less';\r\nimport logo from './logo.svg';\r\n\r\nconst routes: string[] = ['Context API', 'createRef API', 'forwardRef API', 'Component New Lifecycle']\r\nconst URL_REPLACE = /\\s+/g;\r\nconst urlRoutes = routes.map(route => route.replace(URL_REPLACE, '-').toLowerCase())\r\n\r\n\r\nclass App extends React.Component {\r\n  public render() {\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n          <div className=\"App\">\r\n            <header className=\"App-header\">\r\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n              <h1 className=\"App-title\">Welcome to React</h1>\r\n            </header>\r\n\r\n          </div>\r\n          <nav>\r\n            <ul style={{ textAlign: 'left' }}>\r\n              {\r\n                routes.map((route, index) => (\r\n                  <li key={route}>\r\n                    <Link to={urlRoutes[index]}>{route}</Link>\r\n                  </li>\r\n                ))\r\n              }\r\n            </ul>\r\n          </nav>\r\n          <div className=\"main-flex\">\r\n            <Switch>\r\n              <Route path='/context-api' component={ContextAPI} />\r\n              <Route path='/createref-api' component={CustomTextInput} />\r\n              <Route path='/forwardref-api'  component={IncludeForWardRefCom}/>\r\n              <Route path='/component-new-lifecycle'  component={NewLifecycle}/>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.tsx","import * as React from 'react';\r\nimport { GlobalStoreContext, initialState, IState } from '../../reactContext/index'\r\n\r\ntype ActionType = 'UPDATE_THEME' | 'UPDATE_COLOR' | 'UPDATE_THEME_THEN_COLOR'\r\ninterface IStateDispatch extends IState {\r\n  dispatch: (action: { [key: string]: any, type: ActionType }) => void\r\n}\r\n\r\nclass GlobalStoreContextProvider extends React.Component {\r\n  // initialState\r\n  public state = {\r\n    ...initialState\r\n  };\r\n  // reducer\r\n  public handleContextChange = (action: { type: ActionType, theme: string, color: string }) => {\r\n    switch (action.type) {\r\n      case \"UPDATE_THEME\":\r\n        return this.setState({\r\n          theme: action.theme\r\n        });\r\n      case \"UPDATE_COLOR\":\r\n        return this.setState({\r\n          color: action.color\r\n        });\r\n      case \"UPDATE_THEME_THEN_COLOR\":\r\n        return this.setState({\r\n          color: action.color,\r\n          theme: action.theme\r\n        });\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <GlobalStoreContext.Provider\r\n        value={{\r\n          color: this.state.color,\r\n          dispatch: this.handleContextChange,\r\n          theme: this.state.theme,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </GlobalStoreContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst SubComponent = (props: IStateDispatch) => {\r\n  function handleUT() {\r\n    props.dispatch({\r\n      theme: \"light\",\r\n      type: \"UPDATE_THEME\",\r\n    })\r\n  }\r\n  function handleUC() {\r\n    props.dispatch({\r\n      color: \"red\",\r\n      type: \"UPDATE_COLOR\",\r\n    })\r\n  }\r\n  function handleUTC() {\r\n    props.dispatch({\r\n      color: \"purple\",\r\n      theme: \"dark\",\r\n      type: \"UPDATE_THEME_THEN_COLOR\",\r\n    })\r\n  }\r\n  return (\r\n    <div>\r\n      <button onClick={handleUT} >\r\n        change theme\r\n      </button>\r\n      <div>{props.theme}</div>\r\n      {/* action */}\r\n      <button onClick={handleUC} >\r\n        change color\r\n      </button>\r\n      <div>{props.color}</div>\r\n      {/* action */}\r\n      <button\r\n        onClick={handleUTC}\r\n      >\r\n        change theme then color\r\n      </button>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport default class ContextAPI extends React.Component {\r\n  public render() {\r\n    return (\r\n      <GlobalStoreContextProvider>\r\n        <GlobalStoreContext.Consumer>\r\n          {(context) => (\r\n            <SubComponent\r\n              theme={context.theme}\r\n              color={context.color}\r\n              dispatch={context.dispatch!}\r\n            />\r\n          )}\r\n        </GlobalStoreContext.Consumer>\r\n      </GlobalStoreContextProvider>\r\n    );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ContextAPI/index.tsx","import * as  React from \"react\";\r\n\r\nexport interface IState {\r\n  color: string;\r\n  theme: string;\r\n  dispatch?: (action: any) => void\r\n}\r\n\r\nexport const initialState: IState = {\r\n  color: \"blue\",\r\n  theme: \"dark\",\r\n};\r\n\r\nexport const GlobalStoreContext: React.Context<IState> = React.createContext({\r\n  ...initialState\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/reactContext/index.ts","import * as React from 'react'\r\nimport CustomTextInput from '../CreateRefAPI';\r\n/**   higher-order components */\r\n\r\nfunction logProps(WrappedComponent: React.ComponentClass) {\r\n  class LogProps extends React.Component<{ forwardRef?: React.Ref<any> }> {\r\n    public componentDidUpdate(prevProps: any) {\r\n      // tslint:disable:no-console\r\n      console.log('old props:', prevProps);\r\n      console.log('new props:', this.props);\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n      const { forwardRef, ...rest } = this.props\r\n      return <WrappedComponent {...rest} ref={forwardRef} />;\r\n    }\r\n  }\r\n\r\n  return React.forwardRef((props, ref) => {\r\n    return <LogProps {...props} forwardRef={ref} />\r\n  })\r\n}\r\n\r\nconst WrapCustomTextInput = logProps(CustomTextInput)\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport default class IncludeForWardRefCom extends React.Component<{}, { value: string }> {\r\n  // componentRef 为被包装的组件 CustomTextInput 而不是包装后的组件LogProps\r\n  public componentRef: React.RefObject<CustomTextInput>\r\n\r\n  constructor(props: {}) {\r\n    super(props)\r\n    this.componentRef = React.createRef()\r\n    this.state = {\r\n      value: ''\r\n    }\r\n  }\r\n  public handleClick = () => {\r\n    if (this.componentRef.current) {\r\n      const value = this.componentRef.current.textInput.current!.value\r\n      this.setState({ value })\r\n    }\r\n  }\r\n\r\n  public handleClear=()=>{\r\n    if (this.componentRef.current) {\r\n      this.componentRef.current.textInput.current!.value = ''\r\n      this.setState({ value:'' })\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return <React.Fragment>\r\n      <div>\r\n        <label>value:{this.state.value}</label>\r\n      </div>\r\n      <WrapCustomTextInput ref={this.componentRef} >\r\n        <React.Fragment>\r\n          <button onClick={this.handleClick}>commit</button>\r\n          <button onClick={this.handleClear}>clear</button>\r\n        </React.Fragment>\r\n      </WrapCustomTextInput>\r\n    </React.Fragment >\r\n  }\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ForwardRef/index.tsx","import * as React from 'react'\r\n\r\nconst THEME = ['red', 'light', 'dark', 'blue']\r\n\r\nconst initItem = Array.from({ length: 10 })\r\n\r\n// tslint:disable:no-console\r\nexport default class NewLifecycle extends React.Component<{}, { theme: string, item: number[] }> {\r\n  public listRef: React.RefObject<HTMLDivElement>\r\n\r\n  public state = {\r\n    item: initItem.map((i, index) => index),\r\n    theme: THEME[0]\r\n  }\r\n\r\n  constructor(props: {}) {\r\n    super(props)\r\n    this.listRef = React.createRef();\r\n  }\r\n\r\n  public handleChange = () => {\r\n    this.setState(() => {\r\n      return {\r\n        theme: THEME[Math.floor(Math.random() * THEME.length)]\r\n      }\r\n    })\r\n  }\r\n\r\n  public getSnapshotBeforeUpdate(prevProps: {}, prevState: { theme: string, item: number[] }) {\r\n    if (prevState.item.length !== this.state.item.length) {\r\n      const list = this.listRef.current!;\r\n      return list.scrollHeight - list.scrollTop;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: {}, prevState: { theme: string, item: number[] }, snapshot: null | number) {\r\n    if (snapshot !== null) {\r\n      const list = this.listRef.current!;\r\n      list.scrollTop = list.scrollHeight - snapshot > 0 ? list.scrollHeight - snapshot : 0;\r\n    }\r\n  }\r\n\r\n\r\n  public handleAdd = () => {\r\n    this.setState((state) => {\r\n      // state.item.unshift(...initItem.map((i, index) => index + state.item.length))\r\n      const item = state.item.slice();\r\n      item.unshift(...initItem.map((i, index) => index + state.item.length))\r\n      return { item }\r\n    })\r\n  }\r\n\r\n  // tslint:disable-next-line:no-empty\r\n  public handleReduce = () => {\r\n    if (this.state.item.length > 0) {\r\n      this.setState((state) => {\r\n        // state.item.unshift(...initItem.map((i, index) => index + state.item.length))\r\n        const item = state.item.slice();\r\n        item.splice(0, 10)\r\n        return { item }\r\n      })\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <h2>getDerivedStateFromProps</h2>\r\n        <aside style={{ marginBottom: 12 }}>代替 componentWillReceiveProps 的新生命周期: static getDerivedStateFromProps(props, state)</aside>\r\n        <div>\r\n          <label>\r\n            点击会改变传给子组件的props，通过getDerivedStateFromProps改变子组件state\r\n          <button onClick={this.handleChange}>change theme</button>\r\n          </label>\r\n          <h4>子组件:</h4>\r\n          <div>\r\n            <ChildComponent value={this.state.theme} />\r\n          </div>\r\n        </div>\r\n        <h2>getSnapshotBeforeUpdate</h2>\r\n        <aside style={{ marginBottom: 12 }}>在 getSnapshotBeforeUpdate 声明周期中读取的dom元素保证跟更新前状态一致 </aside>\r\n        <div>\r\n          <span>\r\n            点击增加或减少列表数量 </span>\r\n          <button style={{ marginLeft: 20 }} onClick={this.handleAdd}>add</button>\r\n          <span>\r\n            <button style={{ marginLeft: 20 }} onClick={this.handleReduce}>reduce</button>\r\n          </span>\r\n\r\n\r\n          <div id=\"zx\" style={{ height: 200, overflow: 'auto', marginBottom: 50, border: '1px solid' }} ref={this.listRef}>\r\n            <ul className=\"my-ul\">\r\n              {\r\n                this.state.item.map(k => {\r\n                  // 为了更加明显看出差别，设置随机key让元素每次都重新渲染\r\n                  return <li key={Math.random()}> ITEM{k}</li>\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\ninterface IChildComponentState {\r\n  newTheme: string,\r\n  oldTheme: string,\r\n  currentPropValue: string\r\n}\r\n\r\n// tslint:disable:max-classes-per-file\r\nclass ChildComponent extends React.Component<{ value: string }, IChildComponentState> {\r\n\r\n\r\n  public static getDerivedStateFromProps(nextProps: { value: string }, prevState: IChildComponentState) {\r\n    console.log(nextProps, prevState);\r\n    if (nextProps.value !== prevState.currentPropValue) {\r\n      return {\r\n        currentPropValue:nextProps.value,\r\n        newTheme: nextProps.value,\r\n        oldTheme: prevState.newTheme,\r\n      };\r\n    }\r\n    return null\r\n  }\r\n\r\n\r\n\r\n  public state = {\r\n    currentPropValue: '',\r\n    newTheme: '',\r\n    oldTheme: '',\r\n  }\r\n\r\n  public handleClick = () => {\r\n    if(this.state.newTheme !=='yellow'){\r\n      this.setState({ newTheme: 'yellow',oldTheme:this.state.newTheme })\r\n    }\r\n   \r\n  }\r\n\r\n  public render() {\r\n    const { newTheme, oldTheme } = this.state\r\n    return <div>\r\n      <p>新主题:{newTheme}</p>\r\n      <p>旧主题:{oldTheme}</p>\r\n      <label>\r\n        直接修改<span style={{ color: 'red' }}>子组件state</span>，也会触发getDerivedStateFromProps，不同于componentWillReceiveProps\r\n            <button onClick={this.handleClick}>yellow</button>\r\n      </label>\r\n    </div>\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/NewLifecycle/index.tsx","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/logo.svg\n// module id = 77\n// module chunks = 1","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL!,\r\n      window.location.toString()\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type')!.indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/registerServiceWorker.ts"],"sourceRoot":""}